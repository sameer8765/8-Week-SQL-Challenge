----------------------------------------------------- CLEANING OF TABLE -------------------------------------------------------------------------

create table clean_weekly_sales as
SELECT CAST(WEEK_DATE AS DATE) AS WEEK_DATE, WEEK(WEEK_DATE) AS WEEK_NUMBER, MONTH(WEEK_DATE) AS MONTH_NUMBER,
YEAR(WEEK_DATE) as calendar_year, region, platform, segment, customer_type, 
CASE WHEN SEGMENT LIKE '%C%' THEN 'couples'
	 WHEN SEGMENT LIKE '%F%' THEN 'families'
     ELSE 'unknown'
     END AS DEMOGRAPHIC,
	CASE WHEN SEGMENT LIKE '%1%' THEN 'young adults'
	 WHEN SEGMENT LIKE '%2%' THEN 'middle aged'
     WHEN SEGMENT LIKE '%4%' or SEGMENT LIKE '%3%' THEN 'retires'
     ELSE 'unknown'
     END AS AGE_BAND, sales, transactions,
     round(SALES/TRANSACTIONS,2) AS AVG_TRANSACTION     
FROM weekly_sales;

select * from clean_weekly_sales;

create table cleaned_weekly_sales as
SELECT
  cast(week_date as date) AS week_date,
 week(cast(week_date as date)) AS week_number,
  month(cast(week_date as date))  AS month_number,
  year(cast(week_date as date))  AS calendar_year,
  region,
  platform,
  segment,
  customer_type,
  CASE 
    WHEN RIGHT(segment, 1) = '1' THEN 'Young Adults'
    WHEN RIGHT(segment, 1) = '2' THEN 'Middle Aged'
    WHEN RIGHT(segment, 1) IN ('3', '4') THEN 'Retirees'
    ELSE 'unknown' END AS age_band,
  CASE 
    WHEN LEFT(segment, 1) = 'C' THEN 'Couples'
    WHEN LEFT(segment, 1) = 'F' THEN 'Families'
    ELSE 'unknown' END AS demographic,
  transactions,
  CAST(sales AS float) AS sales,
  ROUND(CAST(sales AS FLOAT)/transactions, 2) AS avg_transaction
FROM weekly_sales;

------------------------------------------------------ 2. DATA EXPLORATION -----------------------------------------------------------------------

1> What day of the week is used for each week_date value?

SELECT DISTINCT(dayname(week_date)) AS week_date_value
FROM clean_weekly_sales;

3> How many total transactions were there for each year in the dataset?

select calendar_year, sum(transactions) as total_transaction
from clean_weekly_sales
group by calendar_year;

4>  What is the total sales for each region for each month?

select region, month_number, sum(sales) as total_sales
from cleaned_weekly_sales
group by region, month_number
order by region, month_number;

5> What is the total count of transactions for each platform?

SELECT 
  platform,
  SUM(transactions) AS total_transactions
FROM cleaned_weekly_sales
GROUP BY platform;

6> What is the percentage of sales for Retail vs Shopify for each month?

with platform_month_sales as
(select calendar_year, month_number, platform, sum(sales) as monthly_sales
FROM cleaned_weekly_sales
group by calendar_year, month_number, platform)

select calendar_year, month_number,
round((100*sum(case when platform = 'Retail' then monthly_sales end)/sum(monthly_sales)),2) as retail_perc,
round((100*sum(case when platform = 'Shopify' then monthly_sales end)/sum(monthly_sales)),2) as shopify_perc
from platform_month_sales
group by calendar_year, month_number;

7> What is the percentage of sales by demographic for each year in the dataset?

WITH sales_by_demographic AS (
  SELECT 
    calendar_year,
    demographic,
    SUM(sales) AS sales
  FROM clean_weekly_sales
  GROUP BY calendar_year, demographic)

SELECT 
  calendar_year,
  CAST(100.0 * MAX(CASE WHEN demographic = 'Families' THEN sales END)
	/ SUM(sales) AS decimal(5, 2)) AS pct_families,
  CAST(100.0 * MAX(CASE WHEN demographic = 'Couples' THEN sales END) 
	/ SUM(sales) AS decimal(5, 2)) AS pct_couples,
  CAST(100.0 * MAX(CASE WHEN demographic = 'unknown' THEN sales END)
	/ SUM(sales) AS decimal(5, 2)) AS pct_unknown
FROM sales_by_demographic
GROUP BY calendar_year;

8>  Which age_band and demographic values contribute the most to Retail sales?

DECLARE @retailSales bigint = (
  SELECT SUM(sales)
  FROM clean_weekly_sales
  WHERE platform = 'Retail')
				
SELECT 
  age_band,
  demographic,
  SUM(sales) AS sales,
  CAST(100.0 * SUM(sales)/@retailSales AS decimal(5, 2)) AS contribution
FROM clean_weekly_sales
WHERE platform = 'Retail'
GROUP BY age_band, demographic
ORDER BY contribution DESC;

9> Can we use the avg_transaction column to find the average transaction size for each year for Retail vs Shopify? If not - how would you calculate it instead?

SELECT 
  calendar_year,
  platform,
  ROUND(AVG(avg_transaction), 0) AS avg_transaction_row,
  SUM(sales) / SUM(transactions) AS avg_transaction_group
FROM clean_weekly_sales
GROUP BY calendar_year, platform
ORDER BY calendar_year, platform;
